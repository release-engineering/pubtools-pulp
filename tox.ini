[tox]
envlist = py27,py38,static,docs

[testenv]
deps=-rtest-requirements.txt
commands=pytest -v {posargs}
whitelist_externals=sh
setenv =
  RPM_PY_VERBOSE=true

[testenv:py27]
deps=
	# Note: we need to explicitly list requirements.in here
	# so it's processed at the same time as the constraints file
	-rrequirements.in
	-clegacy.constraints
	-rtest-requirements.in

[testenv:static]
deps=
	-rtest-requirements.txt
commands=
	sh -c 'pylint pubtools; test $(( $? & (1|2|4|32) )) = 0'

[testenv:cov]
usedevelop=true
commands=
	pytest --cov-report=html --cov-report=xml --cov=pubtools {posargs}

[testenv:cov-travis]
passenv = TRAVIS TRAVIS_*
usedevelop=true
commands=
	pytest --cov=pubtools {posargs}
	coveralls

[testenv:docs]
use_develop=true
commands=
	sphinx-build -M html docs docs/_build

[pytest]
testpaths = tests
threadleak = True

[testenv:pip-compile]
# Recompile all requirements .txt files using pip-compile.
# Don't edit me - I'm deployed from a template.
deps = pip-tools
basepython = python3.8
skip_install = true
skipsdist = true
commands =
    pip-compile -U --generate-hashes requirements.in
    pip-compile -U --generate-hashes requirements.in test-requirements.in -o test-requirements.txt
# end pip-compile
